{
	"state": {
		"passed": 9,
		"failed": 0,
		"skipped": 0
	},
	"start": "2017-09-07T05:31:26.759Z",
	"end": "2017-09-07T05:32:05.457Z",
	"capabilities": {
		"browserName": "chrome",
		"chromeOptions": {
			"args": [
				"disable-gpu",
				"headless"
			]
		},
		"proxy": null
	},
	"host": "127.0.0.1",
	"port": 4444,
	"baseUrl": "http://localhost",
	"framework": "mocha",
	"mochaOpts": {
		"timeout": 10000,
		"ui": "bdd"
	},
	"suites": [
		{
			"name": "wauker",
			"duration": 0,
			"start": "2017-09-07T05:32:04.750Z",
			"tests": [],
			"hooks": []
		},
		{
			"name": "wauker",
			"duration": 527,
			"start": "2017-09-07T05:32:04.751Z",
			"end": "2017-09-07T05:32:05.278Z",
			"tests": [],
			"hooks": [
				{
					"start": "2017-09-07T05:32:04.752Z",
					"end": "2017-09-07T05:32:04.752Z",
					"duration": 0,
					"title": "\"before each\" hook",
					"associatedSuite": "wauker",
					"associatedTest": "should be equal to [ 'Array' ]"
				},
				{
					"start": "2017-09-07T05:32:04.872Z",
					"end": "2017-09-07T05:32:04.872Z",
					"duration": 0,
					"title": "\"after each\" hook",
					"associatedSuite": "wauker",
					"associatedTest": "should be equal to [ 'Array' ]"
				},
				{
					"start": "2017-09-07T05:32:04.873Z",
					"end": "2017-09-07T05:32:04.874Z",
					"duration": 1,
					"title": "\"before each\" hook",
					"associatedSuite": "wauker",
					"associatedTest": "should be equal to [ 'RangeError', 'Error' ]"
				},
				{
					"start": "2017-09-07T05:32:04.923Z",
					"end": "2017-09-07T05:32:04.923Z",
					"duration": 0,
					"title": "\"after each\" hook",
					"associatedSuite": "wauker",
					"associatedTest": "should be equal to [ 'RangeError', 'Error' ]"
				},
				{
					"start": "2017-09-07T05:32:04.924Z",
					"end": "2017-09-07T05:32:04.924Z",
					"duration": 0,
					"title": "\"before each\" hook",
					"associatedSuite": "wauker",
					"associatedTest": "should be equal to [ ]"
				},
				{
					"start": "2017-09-07T05:32:04.973Z",
					"end": "2017-09-07T05:32:04.973Z",
					"duration": 0,
					"title": "\"after each\" hook",
					"associatedSuite": "wauker",
					"associatedTest": "should be equal to [ ]"
				},
				{
					"start": "2017-09-07T05:32:04.974Z",
					"end": "2017-09-07T05:32:04.974Z",
					"duration": 0,
					"title": "\"before each\" hook",
					"associatedSuite": "wauker",
					"associatedTest": "should be equal to [ ]"
				},
				{
					"start": "2017-09-07T05:32:05.016Z",
					"end": "2017-09-07T05:32:05.016Z",
					"duration": 0,
					"title": "\"after each\" hook",
					"associatedSuite": "wauker",
					"associatedTest": "should be equal to [ ]"
				},
				{
					"start": "2017-09-07T05:32:05.016Z",
					"end": "2017-09-07T05:32:05.017Z",
					"duration": 1,
					"title": "\"before each\" hook",
					"associatedSuite": "wauker",
					"associatedTest": "should be equal to [ ]"
				},
				{
					"start": "2017-09-07T05:32:05.067Z",
					"end": "2017-09-07T05:32:05.067Z",
					"duration": 0,
					"title": "\"after each\" hook",
					"associatedSuite": "wauker",
					"associatedTest": "should be equal to [ ]"
				},
				{
					"start": "2017-09-07T05:32:05.067Z",
					"end": "2017-09-07T05:32:05.067Z",
					"duration": 0,
					"title": "\"before each\" hook",
					"associatedSuite": "wauker",
					"associatedTest": "should be equal to [ ]"
				},
				{
					"start": "2017-09-07T05:32:05.118Z",
					"end": "2017-09-07T05:32:05.118Z",
					"duration": 0,
					"title": "\"after each\" hook",
					"associatedSuite": "wauker",
					"associatedTest": "should be equal to [ ]"
				},
				{
					"start": "2017-09-07T05:32:05.119Z",
					"end": "2017-09-07T05:32:05.119Z",
					"duration": 0,
					"title": "\"before each\" hook",
					"associatedSuite": "wauker",
					"associatedTest": "should be equal to [ ]"
				},
				{
					"start": "2017-09-07T05:32:05.164Z",
					"end": "2017-09-07T05:32:05.165Z",
					"duration": 1,
					"title": "\"after each\" hook",
					"associatedSuite": "wauker",
					"associatedTest": "should be equal to [ ]"
				},
				{
					"start": "2017-09-07T05:32:05.166Z",
					"end": "2017-09-07T05:32:05.167Z",
					"duration": 1,
					"title": "\"before each\" hook",
					"associatedSuite": "wauker",
					"associatedTest": "should be equal to [ ]"
				},
				{
					"start": "2017-09-07T05:32:05.209Z",
					"end": "2017-09-07T05:32:05.209Z",
					"duration": 0,
					"title": "\"after each\" hook",
					"associatedSuite": "wauker",
					"associatedTest": "should be equal to [ ]"
				},
				{
					"start": "2017-09-07T05:32:05.216Z",
					"end": "2017-09-07T05:32:05.216Z",
					"duration": 0,
					"title": "\"before each\" hook",
					"associatedSuite": "wauker",
					"associatedTest": "should be equal to [ 'Pear', 'Apple', 'Orange' ]"
				},
				{
					"start": "2017-09-07T05:32:05.278Z",
					"end": "2017-09-07T05:32:05.278Z",
					"duration": 0,
					"title": "\"after each\" hook",
					"associatedSuite": "wauker",
					"associatedTest": "should be equal to [ 'Pear', 'Apple', 'Orange' ]"
				},
				{
					"start": "2017-09-07T05:32:05.279Z",
					"end": "2017-09-07T05:32:05.279Z",
					"duration": 0,
					"title": "\"after all\" hook",
					"associatedSuite": "wauker"
				}
			]
		},
		{
			"name": "`wauker( Array ).map( ( constructor ) => constructor.name )`",
			"duration": 122,
			"start": "2017-09-07T05:32:04.751Z",
			"end": "2017-09-07T05:32:04.873Z",
			"tests": [
				{
					"name": "should be equal to [ 'Array' ]",
					"start": "2017-09-07T05:32:04.752Z",
					"end": "2017-09-07T05:32:04.872Z",
					"duration": 120,
					"state": "pass"
				}
			],
			"hooks": []
		},
		{
			"name": "`wauker( RangeError ).map( ( constructor ) => constructor.name )`",
			"duration": 50,
			"start": "2017-09-07T05:32:04.873Z",
			"end": "2017-09-07T05:32:04.923Z",
			"tests": [
				{
					"name": "should be equal to [ 'RangeError', 'Error' ]",
					"start": "2017-09-07T05:32:04.873Z",
					"end": "2017-09-07T05:32:04.923Z",
					"duration": 50,
					"state": "pass"
				}
			],
			"hooks": []
		},
		{
			"name": "`wauker( )`",
			"duration": 51,
			"start": "2017-09-07T05:32:04.923Z",
			"end": "2017-09-07T05:32:04.974Z",
			"tests": [
				{
					"name": "should be equal to [ ]",
					"start": "2017-09-07T05:32:04.923Z",
					"end": "2017-09-07T05:32:04.973Z",
					"duration": 50,
					"state": "pass"
				}
			],
			"hooks": []
		},
		{
			"name": "`wauker( 'hello' )`",
			"duration": 42,
			"start": "2017-09-07T05:32:04.974Z",
			"end": "2017-09-07T05:32:05.016Z",
			"tests": [
				{
					"name": "should be equal to [ ]",
					"start": "2017-09-07T05:32:04.974Z",
					"end": "2017-09-07T05:32:05.016Z",
					"duration": 42,
					"state": "pass"
				}
			],
			"hooks": []
		},
		{
			"name": "`wauker( 123 )`",
			"duration": 51,
			"start": "2017-09-07T05:32:05.016Z",
			"end": "2017-09-07T05:32:05.067Z",
			"tests": [
				{
					"name": "should be equal to [ ]",
					"start": "2017-09-07T05:32:05.016Z",
					"end": "2017-09-07T05:32:05.067Z",
					"duration": 51,
					"state": "pass"
				}
			],
			"hooks": []
		},
		{
			"name": "`wauker( { } )`",
			"duration": 51,
			"start": "2017-09-07T05:32:05.067Z",
			"end": "2017-09-07T05:32:05.118Z",
			"tests": [
				{
					"name": "should be equal to [ ]",
					"start": "2017-09-07T05:32:05.067Z",
					"end": "2017-09-07T05:32:05.117Z",
					"duration": 50,
					"state": "pass"
				}
			],
			"hooks": []
		},
		{
			"name": "`wauker( function( ){ } )`",
			"duration": 46,
			"start": "2017-09-07T05:32:05.119Z",
			"end": "2017-09-07T05:32:05.165Z",
			"tests": [
				{
					"name": "should be equal to [ ]",
					"start": "2017-09-07T05:32:05.119Z",
					"end": "2017-09-07T05:32:05.164Z",
					"duration": 45,
					"state": "pass"
				}
			],
			"hooks": []
		},
		{
			"name": "`wauker( ( ) => { } )`",
			"duration": 44,
			"start": "2017-09-07T05:32:05.165Z",
			"end": "2017-09-07T05:32:05.209Z",
			"tests": [
				{
					"name": "should be equal to [ ]",
					"start": "2017-09-07T05:32:05.165Z",
					"end": "2017-09-07T05:32:05.209Z",
					"duration": 44,
					"state": "pass"
				}
			],
			"hooks": []
		},
		{
			"name": "`wauker( new Pear( ) ).map( ( constructor ) => constructor.name )`",
			"duration": 68,
			"start": "2017-09-07T05:32:05.210Z",
			"end": "2017-09-07T05:32:05.278Z",
			"tests": [
				{
					"name": "should be equal to [ 'Pear', 'Apple', 'Orange' ]",
					"start": "2017-09-07T05:32:05.210Z",
					"end": "2017-09-07T05:32:05.278Z",
					"duration": 68,
					"state": "pass"
				}
			],
			"hooks": []
		}
	]
}